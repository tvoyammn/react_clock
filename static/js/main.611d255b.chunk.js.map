{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currTime","timerId","setTimeout","this","setInterval","date","Date","setState","toLocaleTimeString","console","log","clearInterval","name","props","React","Component","App","isClockVisible","clockName","_oldProps","oldState","className","type","onClick","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"sNAWMA,E,4MACJC,MAAQ,CACNC,SAAU,cACVC,QAASC,YAAW,cAAU,I,uDAGhC,WAAqB,IAAD,OAClBC,KAAKJ,MAAME,QAAUG,aAAY,WAC/B,IAAMC,EAAa,IAAIC,KAEvB,EAAKC,SAAS,CAAEP,SAAUK,EAAKG,uBAE/BC,QAAQC,IAAIL,EAAKG,wBAChB,O,kCAGL,WACEG,cAAcR,KAAKJ,MAAME,W,oBAG3B,WACE,IAAQD,EAAaG,KAAKJ,MAAlBC,SACAY,EAAST,KAAKU,MAAdD,KAER,OACE,qCACE,mDAAoBA,KACpB,oDAAqBZ,Y,GA3BTc,IAAMC,WAiCXjB,IC/BTkB,E,4MACJjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,G,wDAGb,SAAmBC,EAAkBC,GAC/BA,EAASF,YAAcf,KAAKJ,MAAMmB,WAEpCT,QAAQC,IAAR,qCAA0CU,EAASF,UAAnD,eAAmEf,KAAKJ,MAAMmB,c,oBAIlF,WAAU,IAAD,OACP,EAAsCf,KAAKJ,MAAnCkB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAcxB,OACE,sBAAKG,UAAU,MAAf,UACE,6CACCJ,GAAkB,cAAC,EAAD,CAAOL,KAAMM,IAChC,wBAAQI,KAAK,SAASC,QAhBR,WAChB,EAAKhB,SAAS,CAAEU,gBAAgB,KAe9B,wBACA,wBAAQK,KAAK,SAASC,QAbR,WAChB,EAAKhB,SAAS,CAAEU,gBAAgB,KAY9B,wBACA,wBAAQK,KAAK,SAASC,QAVL,WACnB,EAAKhB,SAAS,CAAEW,UAAWM,KAAKC,MAAsB,GAAhBD,KAAKE,aASzC,oC,GAlCUZ,IAAMC,WAwCTC,IClDfW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.611d255b.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number\n};\n\ntype State = {\n  currTime: string,\n  timerId: NodeJS.Timeout\n};\n\nclass Clock extends React.Component<Props, State> {\n  state = {\n    currTime: 'Mounting...',\n    timerId: setTimeout(() => {}, 0),\n  };\n\n  componentDidMount() {\n    this.state.timerId = setInterval(() => {\n      const date: Date = new Date();\n\n      this.setState({ currTime: date.toLocaleTimeString() });\n      // eslint-disable-next-line no-console\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerId);\n  }\n\n  render(): React.ReactNode {\n    const { currTime } = this.state;\n    const { name } = this.props;\n\n    return (\n      <>\n        <h2>{`Clock name: ${name}`}</h2>\n        <p>{`Current time: ${currTime}`}</p>\n      </>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport './App.scss';\nimport Clock from './components/Clock';\n\ntype State = {\n  isClockVisible: boolean,\n  clockName: number,\n};\n\ntype Props = {\n\n};\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  componentDidUpdate(_oldProps: Props, oldState: State) {\n    if (oldState.clockName !== this.state.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${oldState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    const showClock = () => {\n      this.setState({ isClockVisible: true });\n    };\n\n    const hideClock = () => {\n      this.setState({ isClockVisible: false });\n    };\n\n    const setClockName = () => {\n      this.setState({ clockName: Math.floor(Math.random() * 10) });\n    };\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {isClockVisible && <Clock name={clockName} />}\n        <button type=\"button\" onClick={showClock}>Show Clock</button>\n        <button type=\"button\" onClick={hideClock}>Hide Clock</button>\n        <button type=\"button\" onClick={setClockName}>Set random name</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}